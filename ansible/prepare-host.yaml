---
- name: Configure localhost to support and run Marine Logger
  hosts: marinelogger
  connection: local
  become: yes
  become_method: sudo
  become_user: root

  vars:
    - dest_dir: /home/pi
    - grove_dir: "{{ dest_dir }}/Dexter/GrovePi"
    - app_dir: "{{ dest_dir }}/oss_marine_datalogger"

  tasks:
    - name: Perform upgrade
      apt:
        autoclean: yes
        autoremove: yes
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 

    - name: Create required directories
      file:
        path: "{{ item.path }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
        state: directory
      loop:
        - {'path': '/home/pi/runtime', 'owner': 'pi', 'group': 'pi', 'mode': '0750'}
        - {'path': '/home/pi/runtime/log', 'owner': 'pi', 'group': 'www-data', 'mode': '0770'}

    - name: Install required packages
      apt:
        autoclean: yes
        autoremove: yes
        name: [
          avrdude,
          minicom,
          i2c-tools,
          libatlas-base-dev,
          libffi-dev,
          libi2c-dev,
          libncurses5,
          nginx-light,
          nodejs,
          python3-dev,
          python3-numpy,
          python3-pip,
          python3-pigpio,
          python3-rpi.gpio,
          python3-scipy,
          python3-serial,
          python3-setuptools,
          python3-smbus,
          python3-virtualenv,
          python3-wheel,
          python-wheel,
          software-properties-common,
          uwsgi-emperor,
          uwsgi-plugin-python3,
          vim,
          virtualenvwrapper,
        ]

    - name: Remove nginx default config
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Create a prod virtual env
      shell:
        cmd: "/usr/bin/virtualenv -p /usr/bin/python3 --prompt='(prod) ' {{ dest_dir }}/.virtualenvs/prod"
      delegate_to: localhost
      become: no

    - name: Configure system with all known templates
      template:
        src: "{{ item }}"
        dest: "/{{ item.split('/')[-1] | replace('#', '/') }}"
        mode: 0640
        owner: root
        group: root
      with_fileglob: 'templates/*'

    - name: Set file permissions, where necessary
      file:
        path: "{{ item.path }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
      loop:
        - {'path': '/etc/uwsgi-emperor/vassals/pi.ini', 'owner': 'root', 'group': 'pi', 'mode': '0640'}
        - {'path': '{{ app_dir }}/.git/hooks/post-merge', 'owner': 'pi', 'group': 'pi', 'mode': '0750'}
        - {'path': '{{ app_dir }}/.git/hooks/post-merge', 'owner': 'pi', 'group': 'pi', 'mode': '0750'}
        - {'path': '{{ dest_dir }}/.virtualenvs/prod/bin/postactivate', 'owner': 'pi', 'group': 'pi', 'mode': '0750'}
        - {'path': '{{ dest_dir }}/.virtualenvs/prod/bin/predeactivate', 'owner': 'pi', 'group': 'pi', 'mode': '0750'}

    - name: Activate new nginx config
      file:
        src: ../sites-available/marinelogger.conf
        dest: /etc/nginx/sites-enabled/marinelogger.conf
        state: link

    - name: Mount tmpfs to save disk writes
      mount:
        src: tmpfs
        path: "{{ item.path }}"
        fstype: tmpfs
        opts: "{{ item.opts }}"
        state: present
      loop:
        - {'path': '/var/log', 'opts': 'nodev,nosuid,size=500M'}
        - {'path': '/home/pi/runtime', 'opts': 'nodev,nosuid,uid=1000,gid=1000,size=500M'}

    - name: Enable required backend daemons
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: restarted
      loop:
        - pigpiod
        - nginx
        - uwsgi-emperor
      ignore_errors: yes

    - name: Load required modules
      lineinfile:
        line: "{{ item }}"
        state: present
        path: /etc/modules
      loop:
        - i2c-dev
        - i2c-bcm2708
        - spidev

    - name: Enable I2C and SPI hardware
      lineinfile:
        line: "{{ item }}"
        state: present
        path: /boot/config.txt
      loop:
        - dtparam=spi=on
        - dtoverlay=pi3-disable-bt 
        - dtoverlay=pi3-miniuart-bt
        - dtoverlay=vc4-kms-v3d
        - dtoverlay=w1-gpio
        - dtparam=audio=on
        - dtparam=i2c1=on
        - dtparam=i2c_arm=on
        - enable_uart=1

    - name: Add local bin to PATH to calm down chardetect
      lineinfile:
        line: PATH=$PATH:/home/pi/.local/bin
        state: present
        path: "{{ dest_dir }}/.bashrc"

    - name: Disable console redirection to python3-serial to free RPi serial port for GPS
      copy:
        content: "root={{ ansible_facts['cmdline']['root'] }} rootfstype=ext4 fsck.repair=yes rootwait"
        dest: /boot/cmdline.txt
        mode: 0755
        owner: root
        group: root

    - name: Run GrovePi system wide setup
      shell:
        cmd: "curl -kL dexterindustries.com/update_grovepi | bash -s -- --system-wide --no-update-aptget --bypass-gui-installation"
        warn: false
      become: no
      delegate_to: localhost

    - name: Install misc libraries for GrovePi
      shell:
        cmd: python3 setup.py install
        chdir: /home/pi/Dexter/lib/Dexter/RFR_Tools/miscellaneous

    - name: Install Grove Python3 support libraries
      shell:
        cmd: "curl -sL https://github.com/Seeed-Studio/grove.py/raw/master/install.sh | sudo bash -s -"

    - name: Install Python3 pip packages
      pip:
        requirements: "{{ dest_dir }}/oss_marine_datalogger/requirements.txt"
        virtualenv: "{{ dest_dir }}/.virtualenvs/prod"
        state: present
      delegate_to: localhost
      become: no

    - name: Upgrade GrovePi firmware
      shell:
        cmd: "echo y | {{ grove_dir }}/Firmware/firmware_update.sh"
        chdir: "{{ grove_dir }}/Firmware/"
      ignore_errors: yes

    - name: Add pi user to dialout group to enable access to GPS and www-data to access log files
      user:
        name: pi
        groups: dialout,www-data
        append: yes

    - name: Upgrade pip in virtual env
      pip:
        name: pip
        extra_args: --upgrade
        virtualenv: "{{ dest_dir }}/.virtualenvs/prod"
      delegate_to: localhost
      become: no

    - name: Install pip packages for web
      pip:
        requirements: "{{ dest_dir }}/oss_marine_datalogger/web/requirements/production.txt"
        virtualenv: "{{ dest_dir }}/.virtualenvs/prod"
        state: present
      delegate_to: localhost
      become: no

    - name: Make virtualenvwrapper active upon login
      lineinfile:
        path: /etc/bash.bashrc
        line: source /usr/share/virtualenvwrapper/virtualenvwrapper.sh

# Tasks
# - add pi to tty group
