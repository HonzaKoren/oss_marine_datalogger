---
- name: Configure localhost to support Marine Logger
  hosts: marinelogger
  connection: local
  become: yes
  become_method: sudo
  become_user: root

  vars:
    - dest_dir: /home/pi
    - grove_dir: "{{ dest_dir }}/GrovePi"

  tasks:
    - name: Perform upgrade
      apt:
        autoclean: yes
        autoremove: yes
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 

    - name: Install required packages
      apt:
        autoclean: yes
        autoremove: yes
        name: [
          avrdude,
          minicom,
          i2c-tools,
          libi2c-dev,
          python3-pip,
          python3-rpi.gpio,
          python3-virtualenv,
          uwsgi-emperor,
          uwsgi-plugin-python3,
          vim,
          virtualenvwrapper,
        ]

    - name: Configure system with all known templates
      template:
        src: "{{ item }}"
        dest: "/{{ item | split'/'[-1] | replace('_', '/')}}"
        mode: 0640
        owner: root
        group: root
      with_fileglob: 'templates/*'


    - name: Mount tmpfs to save SD card writes
      mount:
        src: tmpfs
        path: "{{ item.path }}"
        fstype: tmpfs
        opts: "{{ item.opts }}"
        state: present
      loop:
        - {'path': '/var/log', 'opts': 'nodev,nosuid,size=100M'}
        - {'path': '/home/pi/runtime', 'opts': 'nodev,nosuid,uid=1000,gid=1000,size=200M'}

    - name: Enable required backend daemons
      systemd:
        name: pigpiod
        enabled: yes
        state: restarted
      loop:
        - pigpiod
        - nginx
        - uwsgi-emperor

    - name: Enable I2C
      lineinfile:
        line: dtparam=i2c_arm=on
        insertafter: "^#dtparam=i2c_arm=on"
        state: present
        path: /boot/config.txt

    - name: Add local bin to PATH
      lineinfile:
        line: PATH=$PATH:/home/pi/.local/bin
        state: present
        path: "{{ dest_dir }}/.bashrc"

    - name: Disable console redirection to python3-serial to free RPi serial port for GPS
      copy:
        content: "root={{ ansible_facts['cmdline']['root'] }} rootfstype=ext4 fsck.repair=yes rootwait"
        dest: /boot/cmdline.txt
        mode: 0755
        owner: root
        group: root

    - name: Clone recent GrovePi repository
      git:
        repo: https://github.com/DexterInd/GrovePi.git
        dest: "{{ grove_dir }}"
        clone: yes
        update: yes
        force: yes
      delegate_to: localhost
      become: no

    - name: Upgrade GrovePi firmware
      shell:
        cmd: "echo y | {{ grove_dir }}/Firmware/firmware_update.sh"
        chdir: "{{ grove_dir }}/Firmware/"

    - name: Create a prod virtual env
      shell:
        cmd: "/usr/bin/virtualenv -p /usr/bin/python3 --prompt='(prod) ' --no-site-packages {{ dest_dir }}/.virtualenvs/prod"
      delegate_to: localhost
      become: no

    - name: Install Python3 pip packages
      pip:
        requirements: "{{ dest_dir }}/oss_marine_datalogger/requirements.txt"
        virtualenv: "{{ dest_dir }}/.virtualenvs/prod"
        state: present
      delegate_to: localhost
      become: no

    - name: Install Dexter software
      shell:
        cmd: "source {{ dest_dir }}/.virtualenvs/prod/bin/activate; bash {{ grove_dir }}/Script/update_grovepi.sh --user-local --no-update-aptget --bypass-gui-installation"
      delegate_to: localhost
      become: no



# Tasks
# - add pi to tty group
